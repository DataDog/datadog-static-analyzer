image: registry.ddbuild.io/ubuntu:22.04

stages:
  - test
  - release

.jobs-resource-allocation:
  variables:
    # Sized resources using https://app.datadoghq.com/dashboard/xff-wqx-4a2/ci-reliability-kubernetes-runner-sizing-and-diagnotic
    KUBERNETES_CPU_REQUEST: "6"
    KUBERNETES_CPU_LIMIT: "6"
    KUBERNETES_MEMORY_REQUEST: "12Gi"
    KUBERNETES_MEMORY_LIMIT: "12Gi"
    # Using non-integer CPU requests/limits to avoid the static CPU policy to be set on the helper container.
    # Static CPU policy reserves full CPU cores for containers with integer requests. It is used to isolate
    # CI job containers from each other and prevent noisy ones to starve resources on a CI node.
    # By using non-integer CPU request and limits for the helper container, responsible for cloning,
    # we can leverage multi-cores to speed-up git clones while preserving isolation for the build container.
    KUBERNETES_HELPER_CPU_REQUEST: "200m"
    KUBERNETES_HELPER_CPU_LIMIT: "200m"
    KUBERNETES_HELPER_MEMORY_REQUEST: "1Gi"
    KUBERNETES_HELPER_MEMORY_LIMIT: "1Gi"

test-and-build-amd64:
  extends:
    - .jobs-resource-allocation
  stage: test
  script:
    - apt-get update
    - apt-get install -y git curl build-essential pkg-config libssl-dev
    - curl https://sh.rustup.rs -sSf  > rustup.sh && chmod a+x rustup.sh && ./rustup.sh -y && rm -f rustup.sh
    - source "$HOME/.cargo/env"
    - cargo build -r
    - cargo test
    - apt-get install -y python3 python3-requests
    - python3 misc/test-rules.py -c $PWD/target/release/datadog-static-analyzer -s $PWD/target/release/datadog-static-analyzer-server -l java
    - python3 misc/test-rules.py -c $PWD/target/release/datadog-static-analyzer -s $PWD/target/release/datadog-static-analyzer-server -l javascript
    - python3 misc/test-rules.py -c $PWD/target/release/datadog-static-analyzer -s $PWD/target/release/datadog-static-analyzer-server -l typescript
    - python3 misc/test-rules.py -c $PWD/target/release/datadog-static-analyzer -s $PWD/target/release/datadog-static-analyzer-server -l go
    - python3 misc/test-rules.py -c $PWD/target/release/datadog-static-analyzer -s $PWD/target/release/datadog-static-analyzer-server -l ruby
    - python3 misc/test-rules.py -c $PWD/target/release/datadog-static-analyzer -s $PWD/target/release/datadog-static-analyzer-server -l csharp
    - python3 misc/test-rules.py -c $PWD/target/release/datadog-static-analyzer -s $PWD/target/release/datadog-static-analyzer-server -l python
  variables:
    DD_SITE: datadoghq.com
  tags:
    - arch:amd64

trigger_internal_image:
  stage: release
  only:
    - main
  trigger:
    project: DataDog/images
    branch: ${DD_IMAGES_BRANCH}
    strategy: depend
  variables:
    DD_IMAGES_BRANCH: master
    IMAGE_VERSION: current
    IMAGE_NAME: datadog-static-analyzer
    RELEASE_TAG: ${CI_COMMIT_SHORT_SHA}
    BUILD_TAG:   ${CI_COMMIT_SHORT_SHA}
    TMPL_SRC_IMAGE: v${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
    RELEASE_STAGING: "true"
    RELEASE_PROD: "true"


