on:
  push:
  pull_request:
  schedule:
    # run every day at 9am UTC
    - cron:  '0 9 * * *'
name: Test Rules (staging + prod)
jobs:
  production_rules:
    runs-on: ubuntu-latest
    env:
      DD_SITE: datadoghq.com
    steps:
      - uses: actions/checkout@v4
      - name: Install Stable + Rustfmt + Clippy
        uses: moonrepo/setup-rust@v1
        with:
            toolchain: stable
            components: clippy
            override: true
            default: true
      - uses: ./.github/actions/rust-cache
        with:
          cargo-target: x86_64-unknown-linux-gnu
          cargo-cache-key: release
      - name: Test all production rules
        run: |
          cargo build -r --bin datadog-static-analyzer && \
          cargo build -r --bin datadog-static-analyzer-server && \
          sudo apt-get install python3-requests && \
          for language in go python typescript javascript csharp java ruby; do \
            python misc/test-rules.py -c $PWD/target/release/datadog-static-analyzer -s $PWD/target/release/datadog-static-analyzer-server -l $language ; \
            python misc/test-rules.py --ddsa-runtime -c $PWD/target/release/datadog-static-analyzer -s $PWD/target/release/datadog-static-analyzer-server -l $language ; \
          done
  staging_rules:
    runs-on: ubuntu-latest
    env:
      DD_SITE: datad0g.com
    steps:
      - uses: actions/checkout@v4
      - name: Install Stable + Rustfmt + Clippy
        uses: moonrepo/setup-rust@v1
        with:
          toolchain: stable
          components: clippy
          override: true
          default: true
      - uses: ./.github/actions/rust-cache
        with:
          cargo-target: x86_64-unknown-linux-gnu
          cargo-cache-key: release
      - name: Test all staging rules
        run: |
          cargo build -r --bin datadog-static-analyzer && \
          cargo build -r --bin datadog-static-analyzer-server && \
          sudo apt-get install python3-requests && \
          for language in go python typescript javascript csharp java ruby; do \
            python misc/test-rules.py -c $PWD/target/release/datadog-static-analyzer -s $PWD/target/release/datadog-static-analyzer-server -l $language ; \
            python misc/test-rules.py --ddsa-runtime -c $PWD/target/release/datadog-static-analyzer -s $PWD/target/release/datadog-static-analyzer-server -l $language ; \
          done
