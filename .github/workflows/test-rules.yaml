name: Test Rules (staging + prod)

on:
  push:
    branches:
      - "**"
  pull_request:
  schedule:
    # run every day at 9am UTC
    - cron:  '0 9 * * *'
  workflow_call:

jobs:
  production_rules:
    runs-on: ubuntu-latest
    env:
      DD_SITE: datadoghq.com
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1.10.1
        with:
          components: clippy
      - name: Test all production rules
        run: |
          cargo build --profile release-dev --bin datadog-static-analyzer && \
          cargo build --profile release-dev --bin datadog-static-analyzer-server && \
          sudo apt-get install python3-requests && \
          for language in go python typescript javascript csharp java ruby; do \
            python misc/test-rules.py -c $PWD/target/release-dev/datadog-static-analyzer -s $PWD/target/release-dev/datadog-static-analyzer-server -l $language ; \
          done
  staging_rules:
    runs-on: ubuntu-latest
    env:
      DD_SITE: datad0g.com
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1.10.1
        with:
          components: clippy
      - name: Test all staging rules
        run: |
          cargo build --profile release-dev --bin datadog-static-analyzer && \
          cargo build --profile release-dev --bin datadog-static-analyzer-server && \
          sudo apt-get install python3-requests && \
          for language in go python typescript javascript csharp java ruby; do \
            python misc/test-rules.py -c $PWD/target/release-dev/datadog-static-analyzer -s $PWD/target/release-dev/datadog-static-analyzer-server -l $language ; \
          done
