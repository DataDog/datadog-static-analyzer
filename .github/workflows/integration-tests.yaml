on:
  push:
  schedule:
    # run every day at 9am UTC
    - cron:  '0 9 * * *'
name: Run Integration tests
jobs:
  integration_tests:
    runs-on: ubuntu-latest
    env:
      DD_API_KEY: ${{ secrets.DD_API_KEY }}
      DD_APP_KEY: ${{ secrets.DD_APP_KEY }}
      DD_SITE: ${{ secrets.DD_SITE }}
    steps:
      - uses: actions/checkout@v1
      - name: Install Stable + Rustfmt + Clippy
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            components: clippy
            override: true
            default: true
      - name: Run Integration tests that the analyzer works with a repo
        run: ./misc/integration-test-repo.sh
      - name: Test all production rules
        run: |
          cargo build && \
          sudo apt-get install python3-requests gdb && \
          for ruleset in \
            python-best-practices python-security python-code-style python-design python-django python-flask python-inclusive python-pandas python-security \
            tsx-react typescript-aws typescript-best-practices typescript-browser-security typescript-code-style typescript-common-security typescript-express typescript-inclusive typescript-node-security \
            jsx-react javascript-aws javascript-best-practices javascript-browser-security javascript-code-style javascript-common-security javascript-express javascript-inclusive javascript-node-security \
            java-best-practices java-code-style java-security \
            # docker-best-practices (see STAL-607)\
            do \
            python misc/test-production-rules.py -c $PWD/target/release/datadog-static-analyzer -s $PWD/target/release/datadog-static-analyzer-server  -d true -r $ruleset ; \
            python misc/test-production-rules.py -c $PWD/target/release/datadog-static-analyzer -s $PWD/target/release/datadog-static-analyzer-server -r $ruleset ; \
          done
